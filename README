MUNGE (MUNGE Uid 'N' Gid Emporium) is a service for creating and validating
credentials in order to allow a process to securely authenticate the
UID and GID of another local or remote process within a security realm.
Clients can create and validate these credentials without the use of root
privileges, reserved ports, or platform-specific methods.

A credential is created and validated by the local munged daemon running
on each host within a security realm.  A security realm is defined by
the secret key; munged daemons running on different hosts are in the
same realm if they share the same key.  A client creates or validates a
given credential through the use of the libmunge library or munge/unmunge
executables; these are responsible for communicating with the local daemon
on behalf of the client.

The contents of the credential (including any optional payload data) are
encrypted with a key shared by all munged daemons within the security realm.
The integrity of the credential is ensured by a message authentication
code (MAC).  The credential is valid for a limited time defined by its
time-to-live (TTL).  The daemon ensures unexpired credentials are not
replayed on a given host.  Decoding of a credential can be restricted to a
particular user and/or group ID.  The payload data can be used for purposes
such as embedding the destination's address to ensure the credential is
valid on only that host.  The internal format of the credential is encoded
in a platform-independent manner.  And the credential itself is base64
encoded to allow it to be transmitted over virtually any transport.
